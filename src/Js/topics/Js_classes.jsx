import { Box, Typography } from "@mui/material";

const Js_classes = () => {
  return (
    <Box sx={{ p: 2, maxWidth: 1000, mx: "auto", mt:'-1px' }}>
      <Typography variant="h5" fontWeight="bold" gutterBottom color="primary">
        JavaScript Classes
      </Typography>

      <Typography paragraph>
        рд╣рдо рдЬрд╛рдирддреЗ рд╣реИрдВ рдХрд┐ JavaScript рдореЗрдВ functions рдХреЛ constructor рдХреА рддрд░рд╣ рднреА рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд┐рдпрд╛ рдЬрд╛ рд╕рдХрддрд╛ рд╣реИ тАУ рдпрд╛рдиреА function рдХрд╛ object рдмрдирд╛рдХрд░ рдЙрд╕рдореЗрдВ properties рдФрд░ methods define рдХреА рдЬрд╛рддреА рд╣реИрдВред
      </Typography>

      <Typography paragraph>
        рд▓реЗрдХрд┐рди modern JavaScript рдореЗрдВ рдЗрд╕рд╕реЗ рднреА рдмреЗрд╣рддрд░ рдФрд░ advanced feature рд╣реИ тАУ <strong>class</strong>, рдЬреЛ object-oriented programming рдХреЛ implement рдХрд░рдиреЗ рдореЗрдВ рдХрд╛рдлреА useful рд╣реИред
      </Typography>

      <Typography variant="h6" fontWeight="bold" gutterBottom color="secondary">
        ЁЯФ╣ OOP (Object-Oriented Programming) рдХреНрдпрд╛ рд╣реИ?
      </Typography>

      <Typography paragraph>
        OOP рдПрдХ programming approach рд╣реИ рдЬреЛ рдХрд┐ classes рдФрд░ objects рдкрд░ рдЖрдзрд╛рд░рд┐рдд рд╣реЛрддреА рд╣реИред рдЗрд╕рдореЗрдВ рд╣рдо real-world entities (рдЬреИрд╕реЗ Car, Employee, Student) рдХреЛ code рдореЗрдВ class рдФрд░ object рдХреЗ рдЬрд╝рд░рд┐рдП represent рдХрд░рддреЗ рд╣реИрдВред
      </Typography>

      <Typography paragraph>
        рд╣рд╛рд▓рд╛рдБрдХрд┐ JavaScript рдПрдХ <i>prototype-based</i> language рд╣реИ (Java/C++ рдХреА рддрд░рд╣ class-based рдирд╣реАрдВ), рд▓реЗрдХрд┐рди ES6 рдХреЗ рдмрд╛рдж рдЗрд╕рдореЗрдВ <code>class</code> keyword support рдХрд┐рдпрд╛ рдЧрдпрд╛ рдЬрд┐рд╕рд╕реЗ рд╣рдо OOP structure implement рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред
      </Typography>

      <Typography variant="h6" fontWeight="bold" gutterBottom color="secondary">
        ЁЯФ╣ What is Class?
      </Typography>

      <Typography paragraph>
        Class рдХрд┐рд╕реА object рдХрд╛ blueprint рд╣реЛрддреА рд╣реИред
        <br />
        <strong>Example:</strong> Car рдПрдХ class рд╣реИ, рдФрд░ Maruti, BMW, Ford рдЖрджрд┐ рдЙрд╕рдХреЗ objects рд╣реИрдВред
      </Typography>

      <Typography variant="h6" fontWeight="bold" gutterBottom color="secondary">
        ЁЯФ╣ Class Syntax
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1 ,overflowX:'auto'}}>
{`class YourClass {
  constructor() {
    // initialization code
  }

  method1() {}
  method2() {}
}

const obj = new YourClass();`}
      </Typography>

      <Typography paragraph mt={2}>
        <strong>Note:</strong> <code>constructor()</code> method рдЕрдкрдиреЗ рдЖрдк call рд╣реЛ рдЬрд╛рддрд╛ рд╣реИ рдЬрдм class рдХрд╛ object create рд╣реЛрддрд╛ рд╣реИред
      </Typography>

      <Typography variant="h6" fontWeight="bold" gutterBottom color="secondary">
        ЁЯФ╣ Class Example
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1 ,overflowX:'auto'}}>
{`class User {
  constructor(name) {
    this.name = name;
  }

  sayHi() {
    console.log(\`Hi \${this.name}\`);
  }
}

let user = new User("Babu Rao");
user.sayHi();`}
      </Typography>

      <Typography mt={2}><strong>Output:</strong> Hi Babu Rao</Typography>

      <Typography variant="h6" fontWeight="bold" gutterBottom color="secondary">
        ЁЯФ╣ Constructor Method
      </Typography>

      <Typography component="ul" sx={{ pl: 3 }}>
        <li>Class рдХреЗ рдЕрдВрджрд░ constructor рдПрдХ special method рд╣реЛрддрд╛ рд╣реИред</li>
        <li>Object create рдХрд░рддреЗ рд╣реА constructor automatic call рд╣реЛ рдЬрд╛рддрд╛ рд╣реИред</li>
        <li>рдЗрд╕рдХрд╛ рдирд╛рдо рд╣рдореЗрд╢рд╛ <code>constructor()</code> рд╣реА рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдПред</li>
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1 ,overflowX:'auto', mt:2}}>
{`class MyClass {
  constructor() {
    console.log("Object created");
  }
}

new MyClass();`}
      </Typography>

      <Typography mt={2}><strong>Output:</strong> Object created</Typography>

      <Typography variant="h6" fontWeight="bold" gutterBottom color="secondary" >
        ЁЯФ╣ Important Notes
      </Typography>

      <Typography component="ul" sx={{ pl: 3 }}>
        <li>JavaScript рдореЗрдВ class рднреА рдПрдХ function рд╣реА рд╣реЛрддреА рд╣реИ:</li>
        <li><code>console.log(typeof User); // "function"</code></li>
        <li>рд╕рднреА class methods <code>prototype</code> рдкрд░ store рд╣реЛрддреЗ рд╣реИрдВред</li>
        <li>рдЖрдк <code>User.prototype.methodName</code> рд╕реЗ methods access рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред</li>
        <li><code>User === User.prototype.constructor // true</code></li>
      </Typography>

      <Typography paragraph>
        ЁЯФЪ JavaScript classes рдЖрдкрдХреЛ clean рдФрд░ reusable OOP structure provide рдХрд░рддреА рд╣реИрдВред рдЖрдк рдЖрд╕рд╛рдиреА рд╕реЗ constructor рдФрд░ prototype рдХреЗ рдмрд┐рдирд╛, рд╕рд┐рд░реНрдл class syntax рд╕реЗ objects рдФрд░ logic manage рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред
      </Typography>
    </Box>
  );
};

export default Js_classes;
