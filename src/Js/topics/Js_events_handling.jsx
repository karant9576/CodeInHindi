import { Box, Typography } from "@mui/material";

const Js_events_handling = () => {
  return (
    <Box sx={{ p: 2, maxWidth: 1000, mx: "auto", mt: "-1px" }}>
      <Typography variant="h5" fontWeight="bold" gutterBottom color="primary">
        JavaScript Event Handling
      </Typography>

      <Typography paragraph>
        ‡§™‡§ø‡§õ‡§≤‡•á ‡§ü‡•â‡§™‡§ø‡§ï ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§®‡•á JavaScript ‡§Æ‡•á‡§Ç ‡§Æ‡•å‡§ú‡•Ç‡§¶ various events ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§æ‡•§ ‡§á‡§∏ ‡§ü‡•â‡§™‡§ø‡§ï ‡§Æ‡•á‡§Ç ‡§Ü‡§™ ‡§∏‡•Ä‡§ñ‡•á‡§Ç‡§ó‡•á ‡§ï‡§ø ‡§á‡§® events ‡§ï‡•ã handle ‡§ï‡•à‡§∏‡•á ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§â‡§®‡•ç‡§π‡•á‡§Ç ‡§Ö‡§™‡§®‡•Ä need ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§ï‡•à‡§∏‡•á use ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography paragraph>
        ‡§ï‡§ø‡§∏‡•Ä event ‡§ï‡•ã handle ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§∏ event ‡§™‡§∞ ‡§è‡§ï <strong>handler</strong> assign ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§Ø‡§π handler ‡§è‡§ï function ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã event trigger ‡§π‡•ã‡§®‡•á ‡§™‡§∞ execute ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="error">
        ‚ùï Important
      </Typography>
      <Typography paragraph>
        Web Events, Core JavaScript ‡§ï‡§æ ‡§π‡§ø‡§∏‡•ç‡§∏‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡§Ç, ‡§Ø‡•á <strong>Browser APIs</strong> ‡§ï‡§æ ‡§π‡§ø‡§∏‡•ç‡§∏‡§æ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç ‡§ú‡•ã browser ‡§Æ‡•á‡§Ç inbuilt ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        üîπ Event Handle ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§§‡§∞‡•Ä‡§ï‡§º‡•á
      </Typography>
      <Typography paragraph>
        Event ‡§ï‡•ã handle ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§ï‡§à ‡§§‡§∞‡•Ä‡§ï‡§º‡•á ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç, ‡§ú‡§ø‡§®‡§Æ‡•á‡§Ç ‡§∏‡•á ‡§ï‡•Å‡§õ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§§‡§∞‡•Ä‡§ï‡•á ‡§®‡§ø‡§Æ‡•ç‡§®‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§π‡•à‡§Ç:
      </Typography>

      <Typography variant="h6" gutterBottom>
        üî∏ 1. HTML Attribute ‡§ï‡•á ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ Event Handling
      </Typography>
      <Typography paragraph>
        ‡§á‡§∏ method ‡§Æ‡•á‡§Ç events ‡§ï‡•ã HTML tags ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ ‡§è‡§ï attribute ‡§ï‡•Ä ‡§§‡§∞‡§π define ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<!DOCTYPE html>
<html>
  <body>
    <button onclick="alert('You clicked')">click Event</button>  
    <button onmouseover="alert('Mouse over me')">mouseover</button>  
    <button onmouseout="alert('You just remove the mouse')">mouseout</button>
    <button onclick="alert(this.innerHTML)"><b>Get HTML</b></button> 
    <button onclick="alert(this.innerText)"><b>Get Only Text</b></button> 
    <button onclick="this.innerText='This is new value'">Click me to change</button> 
  </body>
</html>`}
      </Typography>

      <Typography paragraph mt={2}>
        ‡§ä‡§™‡§∞ ‡§ï‡•á ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§Æ‡•á‡§Ç <code>this</code> keyword ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á current element ‡§ï‡•ã access ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§¶‡•á‡§Ç ‡§ï‡§ø HTML attributes ‡§Æ‡•á‡§Ç event handler ‡§≤‡§ø‡§ñ‡§§‡•á ‡§∏‡§Æ‡§Ø <strong>double quote ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ single quote</strong> ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§
      </Typography>

      <Typography paragraph>
        ‡§Ø‡§π ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§õ‡•ã‡§ü‡•á tasks ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§π‡•à, ‡§≤‡•á‡§ï‡§ø‡§® ‡§¨‡§°‡§º‡•á tasks ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡•á‡§π‡§§‡§∞ ‡§π‡•ã‡§ó‡§æ ‡§ï‡§ø ‡§Ü‡§™ JavaScript ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ function ‡§ï‡•ã define ‡§î‡§∞ call ‡§ï‡§∞‡•á‡§Ç‡•§
      </Typography>

      <Typography variant="h6" gutterBottom>
        üî∏ 2. Function Call ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ Event Handling
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<button onclick="count(this)">You Clicked 0 Times</button>  
<script type="text/javascript">
  let number = 0;
  function count(element) {
    number++;
    element.innerText = \`You Clicked \${number} Times\`;
  }
</script>`}
      </Typography>

      <Typography paragraph mt={2}>
        ‡§á‡§∏ ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§Æ‡•á‡§Ç <code>onclick</code> event ‡§™‡§∞ function call ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à ‡§î‡§∞ current element ‡§ï‡•ã argument ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç pass ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§∏‡•á ‡§π‡§Æ ‡§â‡§∏‡•Ä element ‡§ï‡•Ä properties ‡§ï‡•ã modify ‡§ï‡§∞ ‡§∏‡§ï‡•á‡§Ç‡•§
      </Typography>

      <Typography variant="h6" gutterBottom>
        üî∏ 3. DOM Property ‡§∏‡•á Event Handler Assign ‡§ï‡§∞‡§®‡§æ
      </Typography>
      <Typography paragraph>
        HTML Attribute method ‡§™‡•Å‡§∞‡§æ‡§®‡§æ ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§Æ‡§æ‡§®‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§ Modern projects ‡§Æ‡•á‡§Ç ‡§Ü‡§™ event handler ‡§ï‡•ã DOM properties ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á assign ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<button id="count_button">You Clicked 0 Times</button>  
<script type="text/javascript">
  let number = 0;
  count_button.onclick = function () {
    number++;
    count_button.innerText = \`You Clicked \${number} Times\`;
  }
</script>`}
      </Typography>

      <Typography paragraph mt={2}>
        ‡§ä‡§™‡§∞ ‡§¶‡§ø‡§è ‡§ó‡§è ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§Æ‡•á‡§Ç element ‡§ï‡•Ä <code>id</code> ‡§∏‡•á ‡§â‡§∏‡•á directly select ‡§ï‡§∞‡§ï‡•á event handler assign ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§ ‡§á‡§∏ ‡§§‡§∞‡§π ‡§ï‡•á functions ‡§ï‡•ã anonymous functions ‡§≠‡•Ä ‡§ï‡§π‡§§‡•á ‡§π‡•à‡§Ç‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="error">
        ‚ùï Important
      </Typography>
      <Typography paragraph>
        DOM Property ‡§ï‡•á ‡§ú‡§º‡§∞‡§ø‡§è event handler assign ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§Ø‡§π ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§∞‡§ñ‡§®‡§æ ‡§ú‡§º‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•à ‡§ï‡§ø JavaScript code ‡§â‡§∏ element ‡§ï‡•á render ‡§π‡•ã ‡§ú‡§æ‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§π‡•Ä run ‡§π‡•ã, ‡§Ö‡§®‡•ç‡§Ø‡§•‡§æ error ‡§Ü‡§è‡§ó‡•Ä‡•§
      </Typography>

      <Typography paragraph>
        ‡§ú‡§¨‡§ï‡§ø HTML attribute method ‡§Æ‡•á‡§Ç function ‡§§‡§¨ ‡§π‡•Ä call ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§ú‡§¨ ‡§ï‡•ã‡§à event ‡§π‡•ã‡§§‡•Ä ‡§π‡•à, ‡§á‡§∏‡§≤‡§ø‡§è ‡§â‡§∏‡•á element ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§Ø‡§æ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§ï‡§π‡•Ä‡§Ç ‡§≠‡•Ä define ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography paragraph fontStyle="italic" mt={2}>
        ‡§â‡§Æ‡•ç‡§Æ‡•Ä‡§¶ ‡§π‡•à ‡§Ö‡§¨ ‡§Ü‡§™ ‡§∏‡§Æ‡§ù ‡§ó‡§è ‡§π‡•ã‡§Ç‡§ó‡•á ‡§ï‡§ø JavaScript ‡§Æ‡•á‡§Ç events ‡§ï‡•ã ‡§ï‡•à‡§∏‡•á handle ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§Ö‡§ó‡§≤‡•á steps ‡§Æ‡•á‡§Ç ‡§Ü‡§™ ‡§á‡§® events ‡§ï‡•ã React ‡§Ø‡§æ JS frameworks ‡§Æ‡•á‡§Ç ‡§ï‡•à‡§∏‡•á handle ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§µ‡§π ‡§≠‡•Ä ‡§∏‡•Ä‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§
      </Typography>
    </Box>
  );
};

export default Js_events_handling;
