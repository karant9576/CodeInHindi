import { Box, Typography } from "@mui/material";

const Js_switch_loop = () => {
  return (
    <Box className="doc" sx={{ p: 2, maxWidth: 1000, mx: "auto", mt: '-1px' }}>
      <Typography variant="h5" gutterBottom fontWeight="bold" color="primary">
        JavaScript Switch Statement
      </Typography>

      <Typography paragraph>
        JavaScript ‡§Æ‡•á‡§Ç <strong>switch</strong> statement, ‡§ï‡§ø‡§∏‡•Ä matched expression ‡§ï‡•á ‡§≤‡§ø‡§è block of code ‡§ï‡•ã run ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§ ‡§Ø‡§π ‡§≤‡§ó‡§≠‡§ó <strong>else-if</strong> ‡§ï‡•Ä ‡§§‡§∞‡§π ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à, ‡§≤‡•á‡§ï‡§ø‡§® multiple conditions ‡§ï‡•ã handle ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§è‡§ï ‡§î‡§∞ structured ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography paragraph>
        üî∏ ‡§π‡§∞ <code>case</code> expression ‡§ï‡•ã check ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§ ‡§ú‡•ã match ‡§ï‡§∞‡§§‡§æ ‡§π‡•à, ‡§µ‡§π‡•Ä execute ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§<br/>
        üî∏ ‡§Ö‡§ó‡§∞ ‡§ï‡•ã‡§à ‡§≠‡•Ä <code>case</code> match ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§§‡§æ ‡§π‡•à, ‡§§‡•ã <code>default</code> block run ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§<br/>
        üî∏ <code>break</code> keyword case block ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§∏‡•á match ‡§π‡•ã‡§§‡•á ‡§π‡•Ä loop terminate ‡§π‡•ã ‡§ú‡§æ‡§è‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        üß© Syntax
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`switch (expression) {
  case value1:
    // code block
    break;
  case value2:
    // code block
    break;
  default:
    // default code block
}`}
        </Typography>
      </Box>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚úÖ Example 1
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`let x = "apple";
switch (x) {
  case "cake":
    document.write("x is cake");
    break;
  case "orange":
    document.write("x is orange");
    break;
  case "apple":
    document.write("x is apple");
    break;
  default:
    document.write("default case running");
}`}
        </Typography>
      </Box>

      <Typography variant="h6" gutterBottom color="secondary" mt={2}>
        üìå Output:
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre'}}>
        <Typography component="pre" sx={{ m: 0 }}>
{`x is apple`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        üîπ ‡§á‡§∏ ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§Æ‡•á‡§Ç ‡§ú‡•à‡§∏‡•á ‡§π‡•Ä <code>case "apple"</code> match ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§â‡§∏‡§ï‡§æ block run ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§î‡§∞ <code>break</code> ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ execution ‡§µ‡§π‡•Ä‡§Ç ‡§∞‡•Å‡§ï ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚ö†Ô∏è Without Break Example
      </Typography>
      <Box sx={{bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`let x = "apple";
switch (x) {
  case "cake":
    document.write("x is cake");
    break;
  case "apple":
    document.write("x is apple <br>");
  case "orange":
    document.write("x is orange <br>");
  default:
    document.write("default case running");
}`}
        </Typography>
      </Box>

      <Typography variant="h6" gutterBottom color="secondary" mt={2}>
        üìå Output:
      </Typography>
      <Box sx={{bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre'}}>
        <Typography component="pre" sx={{ m: 0 }}>
{`x is apple
x is orange
default case running`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        üîπ ‡§ú‡§¨ ‡§π‡§Æ <code>break</code> ‡§®‡§π‡•Ä‡§Ç ‡§≤‡§ó‡§æ‡§§‡•á, ‡§§‡•ã matched case ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§ï‡•á ‡§∏‡§≠‡•Ä statements sequentially run ‡§π‡•ã ‡§ú‡§æ‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏‡•á <strong>fall-through</strong> behavior ‡§ï‡§π‡§§‡•á ‡§π‡•à‡§Ç‡•§
      </Typography>

      <Typography paragraph>
        üìå <code>&lt;br&gt;</code> tag ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó HTML ‡§Æ‡•á‡§Ç output ‡§ï‡•ã new line ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§
      </Typography>
    </Box>
  );
};

export default Js_switch_loop;