import { Box, Typography } from "@mui/material";

const Js_class_static = () => {
  return (
    <Box sx={{ p: 2, maxWidth: 1000, mx: "auto" ,mt:'-1px' }}>
      <Typography variant="h5" fontWeight="bold" gutterBottom color="primary">
        JavaScript Class Static Properties & Methods
      </Typography>

      <Typography paragraph mt={2}>
        ‡§™‡§ø‡§õ‡§≤‡•á ‡§ü‡•â‡§™‡§ø‡§ï ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§®‡•á Class ‡§î‡§∞ Prototype ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡§¢‡§º‡§æ‡•§ JavaScript ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä Class ‡§ï‡•á ‡§¶‡•ã ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á members ‡§π‡•ã ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç:
        <strong> Static </strong> ‡§î‡§∞ <strong> Non-Static </strong>‡•§
      </Typography>

      <Typography paragraph>
        Non-static members ‡§ï‡•ã ‡§π‡§Æ ‡§¨‡§ø‡§®‡§æ ‡§ï‡§ø‡§∏‡•Ä keyword ‡§ï‡•á define ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç ‡§î‡§∞ ‡§â‡§®‡•ç‡§π‡•á‡§Ç class ‡§ï‡•á object ‡§∏‡•á access ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç:
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1 }}>
{`class User {
  name = "Shyam Lal";
  hello() {
    return \`Hello! \${this.name}\`;
  }
}

const user = new User();
console.log(user.name);     // Shyam Lal
console.log(user.hello());  // Hello! Shyam Lal`}
      </Typography>

      <Typography paragraph mt={2}>
        ‡§ä‡§™‡§∞ ‡§¶‡§ø‡§è ‡§ó‡§è example ‡§Æ‡•á‡§Ç ‡§Ü‡§™ ‡§¶‡•á‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§ï‡§ø non-static members ‡§ï‡•ã access ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è object ‡§¨‡§®‡§æ‡§®‡§æ ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" fontWeight="bold" gutterBottom color="secondary">
        üîπ Static Properties and Methods
      </Typography>

      <Typography paragraph>
        <strong>Static members</strong> ‡§µ‡•ã ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç ‡§ú‡§ø‡§®‡•ç‡§π‡•á‡§Ç <code>static</code> keyword ‡§ï‡•á ‡§∏‡§æ‡§• define ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§Ø‡•á Class ‡§ï‡•á object ‡§∏‡•á ‡§®‡§π‡•Ä‡§Ç ‡§¨‡§≤‡•ç‡§ï‡§ø <strong>directly class name</strong> ‡§∏‡•á access ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1 , overflowX:'auto'}}>
{`class MyClass {
  static staticProperty = "I am a static property";
  static staticMethod() {
    return "I am a static method";
  }
}

console.log(MyClass.staticProperty);
console.log(MyClass.staticMethod());`}
      </Typography>

      <Typography paragraph mt={2}>
        ‡§Ø‡§¶‡§ø ‡§Ü‡§™ object ‡§∏‡•á static members ‡§ï‡•ã access ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á, ‡§§‡•ã:
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1 ,overflowX:'auto' }}>
{`let obj = new MyClass();

console.log(obj.staticProperty); // undefined
obj.staticMethod();              // ‚ùå Uncaught TypeError`}
      </Typography>

      <Typography variant="h6" fontWeight="bold" gutterBottom color="secondary" mt={2}>
        ‚ùå You cannot access <code>this</code> inside static methods
      </Typography>

      <Typography paragraph>
        Static methods ‡§Æ‡•á‡§Ç <code>this</code> ‡§ï‡§æ ‡§Æ‡§§‡§≤‡§¨ current object ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§§‡§æ, ‡§á‡§∏‡§≤‡§ø‡§è ‡§Ü‡§™ non-static properties ‡§ï‡•ã access ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á:
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1 , overflowX:'auto'}}>
{`class User {
  user_name = "Shyam Lal";

  static sayHi() {
    console.log(\`Hi \${this.user_name}\`);
  }
}

User.sayHi(); // Output: Hi undefined`}
      </Typography>

      <Typography variant="h6" fontWeight="bold" gutterBottom color="secondary" mt={2}>
        ‚úÖ Static method ‡§Æ‡•á‡§Ç class instance pass ‡§ï‡§∞‡•á‡§Ç
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1  ,overflowX:'auto'}}>
{`class User {
  user_name = "Shyam Lal";
  getAddress() {
    return "UP, India";
  }

  static sayHi(obj) {
    console.log(\`Hi \${obj.user_name} from \${obj.getAddress()}.\`);
  }
}

const user = new User();
User.sayHi(user);  // Output: Hi Shyam Lal from UP, India`}
      </Typography>

      <Typography variant="h6" fontWeight="bold" gutterBottom color="secondary" mt={2}>
        ‚úÖ Static Method ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ Static Members Access ‡§ï‡§∞‡§®‡§æ
      </Typography>

      <Typography paragraph>
        Static method ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ ‡§Ü‡§™ class name ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á static members ‡§ï‡•ã access ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç:
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1 ,overflowX:'auto' }}>
{`class User {
  static user_name = "Shyam Lal";
  static getAddress() {
    return "UP, India";
  }

  static sayHi() {
    console.log(\`Hi \${User.user_name} from \${User.getAddress()}.\`);
  }
}

User.sayHi();  // Output: Hi Shyam Lal from UP, India`}
      </Typography>

      <Typography mt={3}>
        üîö <strong>Conclusion:</strong> Static properties ‡§î‡§∞ methods ‡§â‡§® situations ‡§Æ‡•á‡§Ç useful ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç ‡§ú‡§π‡§æ‡§Ç ‡§ï‡•ã‡§à functionality class ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•Ä ‡§π‡•ã‡§§‡•Ä ‡§π‡•à ‚Äî ‡§® ‡§ï‡§ø ‡§ï‡§ø‡§∏‡•Ä specific object instance ‡§∏‡•á‡•§
      </Typography>
    </Box>
  );
};

export default Js_class_static;
