import { Box, Typography } from "@mui/material";

const Js_recursive_function = () => {
  return (
    <Box sx={{ p: 2, maxWidth: 1000, mx: "auto" ,mt:'-1px' }}>
      <Typography variant="h5" gutterBottom fontWeight="bold" color="primary">
        JavaScript Recursive Function
      </Typography>

      <Typography paragraph>
        JavaScript ‡§Æ‡•á‡§Ç ‡§≠‡•Ä, PHP, C, ‡§î‡§∞ C++ ‡§ï‡•Ä ‡§§‡§∞‡§π, ‡§π‡§Æ‡•ç‡§Æ recursive functions define ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§
        ‡§ú‡§¨ ‡§ï‡•ã‡§à function ‡§ñ‡•Å‡§¶ ‡§ï‡•ã ‡§π‡•Ä call ‡§ï‡§∞‡§§‡§æ ‡§π‡•à, ‡§§‡•ã ‡§â‡§∏‡•á recursive function ‡§ï‡§π‡§§‡•á ‡§π‡•à‡§Ç, ‡§î‡§∞ ‡§á‡§∏ ‡§™‡•ç‡§∞‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡•ã recursion ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" color="secondary" gutterBottom>
        üìå Need of Recursive Function
      </Typography>

      <Typography paragraph>
        Recursive functions ‡§ï‡§æ use ‡§ñ‡§æ‡§∏‡§ï‡§∞ tree structures, directory structures ‡§Ø‡§æ unknown-length data structures ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à,
        ‡§ú‡§π‡§æ‡§Ç ‡§π‡§Æ‡•á‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§™‡§§‡§æ ‡§ï‡§ø elements ‡§ï‡§ø‡§§‡§®‡•á nested ‡§π‡•à‡§Ç‡•§
      </Typography>

      <Typography paragraph>
        ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ sorting, searching, ‡§î‡§∞ mathematical operations (‡§ú‡•à‡§∏‡•á factorial, Fibonacci series) ‡§Æ‡•á‡§Ç ‡§≠‡•Ä ‡§á‡§®‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" color="secondary" gutterBottom>
        ‚úÖ Basic Recursive Function Example
      </Typography>

      <Box component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<!DOCTYPE html>
<html>
  <head>
    <title>Recursive Function Example</title>
  </head>
  <body>
    <script type="text/javascript">
      function print_number(number) {
        document.write(number + ' , ');
        number++;
        if (number <= 100) {
          print_number(number);
        }
      }
      print_number(1);
    </script>
  </body>
</html>`}
      </Box>

      <Typography paragraph>
        ‡§Ø‡§π function 1 ‡§∏‡•á ‡§≤‡•á‡§ï‡§∞ 100 ‡§§‡§ï ‡§ï‡•á numbers ‡§ï‡•ã recursive ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á print ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§  
        ‡§á‡§∏‡§Æ‡•á‡§Ç ‡§è‡§ï base condition ‡§¶‡•Ä ‡§ó‡§à ‡§π‡•à ‚Äì ‡§Ö‡§ó‡§∞ number 100 ‡§∏‡•á ‡§ú‡§º‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§π‡•ã ‡§ó‡§Ø‡§æ, ‡§§‡•ã function call ‡§π‡•ã‡§®‡§æ ‡§¨‡§Ç‡§¶ ‡§π‡•ã ‡§ú‡§æ‡§è‡§ó‡§æ‡•§
      </Typography>

      <Typography variant="body1" fontWeight="bold" gutterBottom>
        üîé Note:
      </Typography>
      <Typography paragraph>
        Recursive function ‡§ï‡§æ behavior loop ‡§ï‡•Ä ‡§§‡§∞‡§π ‡§π‡•Ä ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‚Äî ‡§ú‡•à‡§∏‡•á for ‡§Ø‡§æ while loop, ‡§™‡§∞ recursive ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á‡•§
        ‡§¨‡§ø‡§®‡§æ condition ‡§ï‡•á ‡§Ø‡§π infinite recursion ‡§Æ‡•á‡§Ç ‡§ö‡§≤‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ ‡§ú‡§ø‡§∏‡§∏‡•á browser crash ‡§π‡•ã ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" color="secondary" gutterBottom>
        üî¢ Factorial using Recursive Function
      </Typography>

      <Box component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<!DOCTYPE html>
<html>
  <head>
    <title>Recursive Factorial</title>
  </head>
  <body>
    <script type="text/javascript">
      function fact(number) {
        if (number <= 1)
          return 1;
        else
          return number * fact(number - 1);
      }
      document.write(\`Factorial of entered number is : \${fact(5)}\`);
    </script>
  </body>
</html>`}
      </Box>

      <Typography paragraph>
        ‡§â‡§™‡§∞ example ‡§Æ‡•á‡§Ç, factorial ‡§®‡§ø‡§ï‡§æ‡§≤‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è recursive logic use ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§  
        ‡§ú‡§¨ number 1 ‡§Ø‡§æ ‡§â‡§∏‡§∏‡•á ‡§ï‡§Æ ‡§π‡•ã ‡§ú‡§æ‡§è, ‡§§‡§¨ 1 return ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‚Äî ‡§Ø‡§π‡•Ä base condition ‡§π‡•à‡•§  
        ‡§Ö‡§®‡•ç‡§Ø‡§•‡§æ‡§•‡§æ same function call ‡§π‡•ã‡§§‡§æ ‡§∞‡§π‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" color="error" gutterBottom>
        ‚ö†Ô∏è Disadvantages of Recursive Function
      </Typography>

      <Typography component="ul" sx={{ pl: 3 }}>
        <li>
          Recursive functions ‡§ú‡§º‡•ç‡§Ø‡§æ‡§¶‡§æ memory ‡§î‡§∞ execution time consume ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§
        </li>
        <li>
          ‡§Ö‡§ó‡§∞ base condition ‡§®‡§æ ‡§π‡•ã ‡§Ø‡§æ ‡§ó‡§≤‡§§ ‡§π‡•ã, ‡§§‡•ã ‡§Ø‡§π infinite recursion ‡§Æ‡•á‡§Ç ‡§ö‡§≤‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
        </li>
        <li>
          Iterative approaches (like loops) ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ‡§§‡§∞ cases ‡§Æ‡•á‡§Ç ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ efficient ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§
        </li>
      </Typography>
    </Box>
  );
};

export default Js_recursive_function;
