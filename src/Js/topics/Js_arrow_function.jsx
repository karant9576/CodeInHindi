import { Box, Typography } from "@mui/material";

const Js_arrow_function = () => {
  return (
    <Box sx={{ p: 2, maxWidth: 1000, mx: "auto", mt: '-1px' }}>
      <Typography variant="h5" gutterBottom fontWeight="bold" color="primary">
        JavaScript Arrow Function
      </Typography>

      <Typography paragraph>
        ‡§™‡§ø‡§õ‡§≤‡•á ‡§ü‡•â‡§™‡§ø‡§ï ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§®‡•á Anonymous Function ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡§¢‡§º‡§æ ‡§ú‡•ã ‡§ï‡§ø normal functions ‡§ï‡•Ä ‡§§‡•Å‡§≤‡§®‡§æ ‡§Æ‡•á‡§Ç ‡§õ‡•ã‡§ü‡§æ ‡§î‡§∞ ‡§∏‡§∞‡§≤ ‡§•‡§æ‡•§  
        JavaScript ‡§Æ‡•á‡§Ç ‡§ê‡§∏‡§æ ‡§π‡•Ä ‡§è‡§ï ‡§î‡§∞ ‡§î‡§∞ ‡§≠‡•Ä ‡§õ‡•ã‡§ü‡§æ ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à function define ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‚Äî ‡§ú‡§ø‡§∏‡•á **Arrow Function** ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography paragraph>
        Arrow Function ‡§ï‡•ã ‡§Ü‡§Æ‡§§‡•å‡§∞ ‡§™‡§∞ short expressions ‡§ï‡•ã evaluate ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        üìò Syntax
      </Typography>

      <Box component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`let test = () => expression;`}
      </Box>

      <Typography paragraph>
        Arrow Function ‡§Æ‡•á‡§Ç curly braces ‡§î‡§∞ <code>return</code> keyword ‡§ï‡•Ä ‡§ú‡§∞‡•Ç‡§∞‡§§ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡•§  
        Expression ‡§Ö‡§™‡§®‡•á ‡§Ü‡§™ evaluate ‡§π‡•ã‡§ï‡§∞ return ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚úÖ Example: Single-line Arrow Function
      </Typography>

      <Box component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>JavaScript Arrow Function In Hindi</title>
  </head>
  <body>
    <script type="text/javascript">
      let test = () => "Hello Arrow !";
      document.write(test());
    </script>
  </body>
</html>`}
      </Box>

      <Typography paragraph>
        <strong>Output:</strong><br />
        Hello Arrow !
      </Typography>

      <Typography paragraph>
        ‚ö†Ô∏è Arrow Function, Anonymous Function ‡§ï‡§æ ‡§π‡•Ä short version ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        üîÅ Multiline Arrow Function
      </Typography>

      <Typography paragraph>
        ‡§Ö‡§ó‡§∞ ‡§è‡§ï ‡§∏‡•á ‡§Ö‡§ß‡§ø‡§ï expression ‡§Ø‡§æ statements ‡§π‡•ã‡§Ç, ‡§§‡•ã Arrow Function ‡§ï‡•á body ‡§ï‡•ã curly braces <code>{`{}`}</code> ‡§Æ‡•á‡§Ç wrap ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§î‡§∞ manually <code>return</code> keyword ‡§≤‡§ø‡§ñ‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Box component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>JavaScript Multiline Arrow Function</title>
  </head>
  <body>
    <script type="text/javascript">
      let test = (name, age, address) => {
        return \`Name : \${name} <br> Age : \${age} <br> Address : \${address}\`;
      };
      document.write(test("Karan Thakur", 20, "India"));
    </script>
  </body>
</html>`}
      </Box>

      <Typography paragraph>
        <strong>Output:</strong><br />
        Name : Karan Thakur<br />
        Age : 20<br />
        Address : India
      </Typography>

      <Typography variant="h6" gutterBottom>
        üß† Important Notes
      </Typography>

      <Typography paragraph>
        ‚Ä¢ ‡§Ø‡§¶‡§ø ‡§ï‡•á‡§µ‡§≤ ‡§è‡§ï ‡§π‡•Ä parameter ‡§™‡§æ‡§∏ ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã ‡§§‡•ã parentheses ‡§π‡§ü‡§æ‡§è ‡§ú‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç:  
        <code>let test = x => x + 90;</code>  
        <br />
        <code>test(10); // Output: 100</code>
      </Typography>

      <Typography paragraph>
        ‚Ä¢ Arrow Function ‡§ï‡•ã constructor ‡§ï‡•Ä ‡§§‡§∞‡§π <code>new</code> keyword ‡§∏‡•á instantiate ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à:  
        <br />
        <code>let obj = new test(); // ‚ùå TypeError</code>
      </Typography>

      <Typography paragraph>
        ‚Ä¢ Arrow Functions ‡§Æ‡•á‡§Ç <code>prototype</code> property ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§§‡•Ä:  
        <br />
        <code>console.log(test.prototype); // undefined</code>
      </Typography>
    </Box>
  );
};

export default Js_arrow_function;
