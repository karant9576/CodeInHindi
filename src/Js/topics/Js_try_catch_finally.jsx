import { Box, Typography } from "@mui/material";

const Js_try_catch_finally = () => {
  return (
    <Box className="doc" sx={{ p: 2, maxWidth: 1000, mx: "auto", mt: -1 }}>
      <Typography variant="h5" gutterBottom fontWeight="bold" color="primary">
        JavaScript try...catch...finally
      </Typography>

      <Typography paragraph>
        ‡§™‡§ø‡§õ‡§≤‡•á topic ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§®‡•á JavaScript ‡§Æ‡•á‡§Ç <strong>try...catch</strong> ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡•ù‡§æ ‡§•‡§æ, ‡§ú‡§π‡§æ‡§Ç ‡§π‡§Æ‡§®‡•á exceptions ‡§ï‡•ã handle ‡§ï‡§ø‡§Ø‡§æ‡•§ ‡§á‡§∏ topic ‡§Æ‡•á‡§Ç ‡§π‡§Æ <strong>finally</strong> block ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡§ó‡•á‡•§
      </Typography>

      <Typography paragraph>
        ‡§ï‡§à ‡§¨‡§æ‡§∞ ‡§π‡§Æ‡•á‡§Ç ‡§ê‡§∏‡§æ code ‡§≤‡§ø‡§ñ‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§ú‡•ã error ‡§Ü‡§Ø‡•á ‡§Ø‡§æ ‡§® ‡§Ü‡§Ø‡•á, ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§Æ‡•á‡§Ç ‡§ö‡§≤‡•á‡•§ ‡§ê‡§∏‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§Æ‡•á‡§Ç ‡§π‡§Æ <strong>finally</strong> block ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ø‡§π block ‡§π‡§Æ‡•á‡§∂‡§æ try ‡§Ø‡§æ catch ‡§ï‡•á ‡§¨‡§æ‡§¶ run ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        üìò Syntax:
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`try {
  // code
} catch(errorObj) {
  // error handling
} finally {
  // always executed
}`}
        </Typography>
      </Box>

      <Typography variant="h6" gutterBottom color="secondary" sx={{ mt: 2 }}>
        ‚úÖ Example 1: try...catch...finally
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`<script type="text/javascript">
  try {
    document.write(blah);
  } catch(ErrorObj) {
    document.write("Error Name: " + ErrorObj.name + "<br>");
    document.write("Error Message: " + ErrorObj.message + "<br>");
  } finally {
    document.write("it will run always");
  }
</script>`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        ‡§â‡§™‡§∞ ‡§¶‡§ø‡§è ‡§ó‡§è ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§Æ‡•á‡§Ç error ‡§Ü‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§µ‡§ú‡•Ç‡§¶ <strong>finally</strong> block run ‡§π‡•Å‡§Ü‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚úÖ Example 2: try...finally (without catch)
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`<script type="text/javascript">
  try {
    document.write("try block <br>");
  } finally {
    document.write("it will run always");
  }
</script>`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        ‡§á‡§∏ case ‡§Æ‡•á‡§Ç ‡§≠‡•Ä error ‡§®‡§π‡•Ä‡§Ç ‡§Ü‡§®‡•á ‡§™‡§∞ <strong>try</strong> ‡§î‡§∞ <strong>finally</strong> ‡§¶‡•ã‡§®‡•ã‡§Ç run ‡§π‡•ã‡§Ç‡§ó‡•á, ‡§î‡§∞ ‡§Ö‡§ó‡§∞ error ‡§Ü‡§Ø‡•á ‡§§‡§¨ ‡§≠‡•Ä <strong>finally</strong> block run ‡§π‡•ã‡§ó‡§æ‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚ùå Invalid Syntaxes
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre'}}>
        <Typography component="pre" sx={{ m: 0 }}>
{`/* Invalid: catch without try */
catch(error) {
  // error
}

/* Invalid: try...finally...catch */
try {
  // code
} finally {
  // always runs
} catch(error) {
  // won't work
}`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        ‡§Ø‡§æ‡§¶ ‡§∞‡§ñ‡•á‡§Ç, <strong>finally</strong> block ‡§π‡§Æ‡•á‡§∂‡§æ <strong>try</strong> ‡§Ø‡§æ <strong>try...catch</strong> ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§π‡•Ä ‡§Ü‡§§‡§æ ‡§π‡•à‡•§ ‡§á‡§∏‡•á ‡§Ö‡§ï‡•á‡§≤‡•á ‡§Ø‡§æ ‡§ó‡§≤‡§§ ‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡§æ syntax error ‡§¶‡•á‡§ó‡§æ‡•§
      </Typography>
    </Box>
  );
};

export default Js_try_catch_finally;
