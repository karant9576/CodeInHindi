import { Box, Typography } from "@mui/material";

const Js_for_in_loop = () => {
  return (
    <Box className="doc" sx={{ p: 2, maxWidth: 1000, mx: "auto", marginTop: "-1px" }}>
      <Typography variant="h5" gutterBottom fontWeight="bold" color="primary">
        JavaScript for in Loop
      </Typography>

      <Typography paragraph>
        JavaScript ‡§Æ‡•á‡§Ç <strong>for...in loop</strong> ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§â‡§® <strong>objects</strong> ‡§ï‡•ã iterate ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§ú‡§ø‡§®‡§Æ‡•á‡§Ç data <strong>key: value</strong> pair ‡§Æ‡•á‡§Ç store ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§ ‡§á‡§∏‡§ï‡§æ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§â‡§¶‡•ç‡§¶‡•á‡§∂‡•ç‡§Ø <strong>enumerable object properties</strong> ‡§ï‡•ã access ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        üîÅ Syntax
      </Typography>
      <Typography sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }} >
{`for (variable in object) {
  // logic here
}`}
      </Typography>

      <Typography paragraph mt={2}>
        - <strong>variable:</strong> ‡§Ø‡§π ‡§π‡§∞ iteration ‡§Æ‡•á‡§Ç object ‡§ï‡•Ä key ‡§ï‡•ã represent ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§<br />
        - <strong>object:</strong> ‡§µ‡§π actual object ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§ú‡§ø‡§∏ ‡§™‡§∞ loop ‡§ö‡§≤‡§æ‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚ùì Why use for...in?
      </Typography>
      <Typography paragraph>
        ‡§á‡§∏‡§ï‡§æ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§â‡§™‡§Ø‡•ã‡§ó object properties ‡§ï‡•ã iterate ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§ Arrays ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡§π ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø <strong>forEach</strong> ‡§Ø‡§æ <strong>for...of</strong> loop ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§¨‡•á‡§π‡§§‡§∞ ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™ ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§∏‡§æ‡§• ‡§π‡•Ä, ‡§Ø‡§π debugging ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≠‡•Ä ‡§â‡§™‡§Ø‡•ã‡§ó‡•Ä ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‡§§‡§æ‡§ï‡§ø ‡§Ü‡§™ object ‡§ï‡•Ä properties ‡§¶‡•á‡§ñ ‡§∏‡§ï‡•á‡§Ç‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚úÖ Example: Iterate String
      </Typography>
      <Typography sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre'}} >
{`let string = "Welcome";
for (let index in string) {
  document.write(
    \`property: \${index} and value: \${string[index]} <br>\`
  );
}`}
      </Typography>

      <Typography paragraph mt={2}>
        ‡§Ø‡§π‡§æ‡§Å <code>backticks (``)</code> ‡§î‡§∞ <code>${'{variable}'}</code> ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á string interpolation ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§ <code>&lt;br&gt;</code> ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó line break ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        üõ†Ô∏è Modify Object Values using for...in
      </Typography>
      <Typography sx={{bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre'}} >
{`let object = {
  name: 'Karan Thakur',
  age: 20,
  designation: 'Web Developer'
};

document.write("Before Change: <br>");
for (let property in object) {
  document.write(
    \`property: \${property} and value: \${object[property]} <br>\`
  );
}

document.write("After Change: <br>");
for (let property in object) {
  if (property === 'age') object[property] = 30;
  document.write(
    \`property: \${property} and value: \${object[property]} <br>\`
  );
}`}
      </Typography>

      <Typography paragraph mt={2}>
        ‡§á‡§∏ ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§®‡•á object ‡§ï‡•Ä <code>age</code> property ‡§ï‡•ã modify ‡§ï‡§ø‡§Ø‡§æ‡•§ ‡§á‡§∏‡•Ä ‡§§‡§∞‡§π ‡§Ü‡§™ <strong>arrays</strong> ‡§ï‡•Ä values ‡§ï‡•ã ‡§≠‡•Ä update ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§
      </Typography>
    </Box>
  );
};

export default Js_for_in_loop;
