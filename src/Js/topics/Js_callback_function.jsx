import { Box, Typography } from "@mui/material";

const Js_callback_function = () => {
  return (
    <Box sx={{ p: 2, maxWidth: 1000, mx: "auto", mt: '-1px' }}>
      <Typography variant="h5" gutterBottom fontWeight="bold" color="primary">
        JavaScript Callback Function
      </Typography>

      <Typography paragraph>
        Callback Functions ‡§µ‡•á functions ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç ‡§ú‡§ø‡§®‡•ç‡§π‡•á‡§Ç ‡§ï‡§ø‡§∏‡•Ä ‡§¶‡•Ç‡§∏‡§∞‡•á function ‡§Æ‡•á‡§Ç **as an argument** pass ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
        ‡§î‡§∞ ‡§ú‡§ø‡§∏ function ‡§Æ‡•á‡§Ç callback pass ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•ã, ‡§â‡§∏‡•á **Higher-Order Function** ‡§ï‡§π‡§§‡•á ‡§π‡•à‡§Ç‡•§
      </Typography>

      <Typography paragraph>
        JavaScript ‡§Æ‡•á‡§Ç Functions ‡§ï‡•ã first-class objects ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§á‡§∏‡§≤‡§ø‡§è ‡§á‡§®‡•ç‡§π‡•á‡§Ç variable ‡§Æ‡•á‡§Ç assign ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à,
        arguments ‡§ï‡•Ä ‡§§‡§∞‡§π ‡§™‡§æ‡§∏ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à, ‡§î‡§∞ return ‡§≠‡•Ä ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        üîç Need of Callback Function in JS
      </Typography>

      <Typography paragraph>
        JavaScript ‡§è‡§ï synchronous scripting language ‡§π‡•à ‚Äî code top-down ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á execute ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§  
        ‡§≤‡•á‡§ï‡§ø‡§® ‡§ï‡•Å‡§õ operations ‡§ú‡•à‡§∏‡•á <code>setTimeout()</code>, <code>fetch()</code>, ‡§Ø‡§æ <code>await</code> asynchronous ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§
        ‡§ê‡§∏‡•á ‡§Æ‡•á‡§Ç ‡§Ü‡§ó‡•á ‡§ï‡§æ code ‡§™‡§π‡§≤‡•á execute ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§ú‡§ø‡§∏‡§∏‡•á unexpected behavior ‡§Ø‡§æ errors ‡§Ü ‡§∏‡§ï‡§§‡•Ä ‡§π‡•à‡§Ç‡•§
      </Typography>

      <Typography paragraph>
        Callback functions asynchronous execution ‡§ï‡•ã control ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ø‡•á ensure ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç ‡§ï‡§ø ‡§ú‡§¨ ‡§§‡§ï ‡§è‡§ï ‡§ï‡§æ‡§Æ ‡§™‡•Ç‡§∞‡§æ ‡§®‡§æ ‡§π‡•ã, ‡§Ö‡§ó‡§≤‡§æ task ‡§®‡§æ ‡§ö‡§≤‡•á‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚úÖ Callback Function Example
      </Typography>

      <Box component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>JavaScript Callback Function</title>
  </head>
  <body>
    <script type="text/javascript">
      function print_name(name) {
        document.write(\`Your full name is : \${name}\`);
      }

      function enter_name(callback) {
        let name = prompt('Enter your full name.');
        callback(name);
      }

      enter_name(print_name);
    </script>
  </body>
</html>`}
      </Box>

      <Typography paragraph>
        <strong>Explanation:</strong>  
        ‡§Ø‡§π‡§æ‡§Å <code>print_name()</code> ‡§ï‡•ã <code>enter_name()</code> ‡§Æ‡•á‡§Ç callback ‡§ï‡•Ä ‡§§‡§∞‡§π pass ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§  
        <code>prompt()</code> ‡§¨‡•ç‡§∞‡§æ‡§â‡§ú‡§º‡§∞ ‡§Æ‡•á‡§Ç input ‡§≤‡•á‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡•Ç‡§ú‡§º ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§  
        ‡§ú‡§¨ ‡§§‡§ï input ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•á‡§ó‡§æ, callback run ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§ó‡§æ‡•§
      </Typography>

      <Typography variant="body1" paragraph>
        ‡§Ü‡§™ callback ‡§ï‡•ã directly ‡§≠‡•Ä define ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç:
      </Typography>

      <Box component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`enter_name(function(name) {
  document.write(\`Your full name is : \${name}\`);
});`}
      </Box>

      <Typography paragraph>
        ‡§á‡§∏‡•á <strong>Synchronous Callback</strong> ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø execution sequential ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚öôÔ∏è Asynchronous Callback Example
      </Typography>

      <Typography paragraph>
        Asynchronous callbacks ‡§§‡§¨ use ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç ‡§ú‡§¨ ‡§ï‡•ã‡§à task time ‡§≤‡•á‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§π‡§Æ ‡§¨‡§æ‡§ï‡•Ä ‡§ï‡§æ code block ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á‡•§
      </Typography>

      <Box component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>JS Asynchronous Callback Example</title>
  </head>
  <body>
    <script type="text/javascript">
      setTimeout(function() {
        console.log('Run after 1 second');
      }, 1000);
      
      console.log('Normal Code');
    </script>
  </body>
</html>`}
      </Box>

      <Typography paragraph>
        <strong>Console Output:</strong><br />
        Normal Code<br />
        Run after 1 second
      </Typography>

      <Typography paragraph>
        <strong>Note:</strong>  
        <code>setTimeout()</code> ‡§è‡§ï callback function ‡§ï‡•ã delay ‡§ï‡•á ‡§∏‡§æ‡§• execute ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§  
        Time ‡§π‡§Æ‡•á‡§∂‡§æ milliseconds ‡§Æ‡•á‡§Ç define ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à (e.g., 1000ms = 1 second)‡•§
      </Typography>
    </Box>
  );
};

export default Js_callback_function;
