import { Box, Typography } from "@mui/material";

const Js_throw = () => {
  return (
    <Box className="doc" sx={{ p: 2, maxWidth: 1000, mx: "auto", mt: -1 }}>
      <Typography variant="h5" gutterBottom fontWeight="bold" color="primary">
        JavaScript throw Statement
      </Typography>

      <Typography paragraph>
        рдкрд┐рдЫрд▓реЗ topics рдореЗрдВ рдЖрдкрдиреЗ program рдореЗрдВ рдЖрдпреА <strong>Exceptions</strong> рдХреЛ handle рдХрд░рдирд╛ рд╕реАрдЦрд╛ред рдХрдИ рдмрд╛рд░ рдРрд╕рд╛ рд╣реЛрддрд╛ рд╣реИ рдХрд┐ рдХрд┐рд╕реА particular condition рдкрд░ рд╣рдореЗрдВ рдЦреБрдж рд╕реЗ рдПрдХ custom error generate рдХрд░рдиреА рдкрдбрд╝рддреА рд╣реИред
      </Typography>

      <Typography paragraph>
        JavaScript рд╣рдореЗрдВ <strong>throw</strong> statement рдХреЗ рдЬрд╝рд░рд┐рдП custom exceptions generate рдХрд░рдиреЗ рдХреА рд╕реБрд╡рд┐рдзрд╛ рджреЗрддрд╛ рд╣реИред
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ЁЯУШ Syntax:
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`throw expression;
// рдпрд╛
throw new Error("message");`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        <strong>expression</strong> рд╡рд╣ value рд╣реЛрддреА рд╣реИ рдЬрд┐рд╕реЗ рд╣рдо error рдХреЗ рд░реВрдк рдореЗрдВ throw рдХрд░рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВред рд╣рдо рдЪрд╛рд╣реЗрдВ рддреЛ JavaScript рдХреЗ predefined constructors рдЬреИрд╕реЗ <code>Error</code>, <code>SyntaxError</code>, рдпрд╛ <code>ReferenceError</code> рдХрд╛ рдЙрдкрдпреЛрдЧ рднреА рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        тЬЕ Example: User Defined Exception
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`<script type="text/javascript">
  try {
    let num = prompt("Enter Any Number : ");
    if (num == 0)
      throw new Error("Invalid number");
    else
      document.write("You entered: " + num);
  } catch (ErrorObj) {
    document.write("Error Name : " + ErrorObj.name + "<br>");
    document.write("Error Message : " + ErrorObj.message);
  }
</script>`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        рдЙрдкрд░ рджрд┐рдП рдЧрдП рдЙрджрд╛рд╣рд░рдг рдореЗрдВ <code>prompt()</code> рдХрд╛ рдЙрдкрдпреЛрдЧ user рд╕реЗ input рд▓реЗрдиреЗ рдХреЗ рд▓рд┐рдП рдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред рдЕрдЧрд░ user <code>0</code> рдбрд╛рд▓рддрд╛ рд╣реИ рддреЛ рдПрдХ custom error generate рд╣реЛрддреА рд╣реИред
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ЁЯФз Error Constructors
      </Typography>
      <Typography paragraph>
        JavaScript рдореЗрдВ рдХрдИ predefined constructors рд╣реЛрддреЗ рд╣реИрдВ рдЬрд┐рдиреНрд╣реЗрдВ рд╣рдо custom exception generate рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ:
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre'}}>
        <Typography component="pre" sx={{ m: 0 }}>
{`throw new Error("message");
throw new SyntaxError("message");
throw new ReferenceError("message");`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        рдЗрди constructors рд╕реЗ рдмрдиреА error рдХрд╛ <code>name</code> рд╡рд╣реА рд╣реЛрддрд╛ рд╣реИ рдЬреЛ constructor рдХрд╛ рдирд╛рдо рд╣реЛрддрд╛ рд╣реИ, рдФрд░ <code>message</code> рд╡рд╣ рд╣реЛрддрд╛ рд╣реИ рдЬреЛ рд╣рдо рдкрд╛рд╕ рдХрд░рддреЗ рд╣реИрдВред
      </Typography>
    </Box>
  );
};

export default Js_throw;
