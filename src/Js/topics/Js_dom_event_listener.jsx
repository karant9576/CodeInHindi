import { Box, Typography } from "@mui/material";

const Js_dom_event_listener = () => {
  return (
    <Box sx={{ p: 2, maxWidth: 1000, mx: "auto", mt: "-1px" }}>
      <Typography variant="h5" fontWeight="bold" gutterBottom color="primary">
        JavaScript Event Listeners
      </Typography>

      <Typography paragraph>
        ‡§™‡§ø‡§õ‡§≤‡•á ‡§ü‡•â‡§™‡§ø‡§ï‡•ç‡§∏ ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§®‡•á JavaScript Events ‡§î‡§∞ ‡§â‡§®‡§ï‡•á Handling ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡•ù‡§æ‡•§ ‡§á‡§∏ ‡§ü‡•â‡§™‡§ø‡§ï ‡§Æ‡•á‡§Ç ‡§Ü‡§™ <strong>Event Listeners</strong> ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡§ó‡•á‡•§
      </Typography>

      <Typography paragraph>
        Event Listeners ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§ø‡§∏‡•Ä selected element ‡§Æ‡•á‡§Ç event ‡§ï‡•ã <strong>Attach</strong> ‡§Ø‡§æ <strong>Detach</strong> ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§Ø‡§æ‡§®‡•Ä ‡§π‡§Æ ‡§ï‡§ø‡§∏‡•Ä element ‡§™‡§∞ ‡§è‡§ï ‡§∏‡•á ‡§Ö‡§ß‡§ø‡§ï events ‡§≠‡•Ä ‡§ú‡•ã‡§°‡§º ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§î‡§∞ ‡§â‡§®‡•ç‡§π‡•á‡§Ç ‡§ú‡§º‡§∞‡•Ç‡§∞‡§§ ‡§™‡§°‡§º‡§®‡•á ‡§™‡§∞ ‡§π‡§ü‡§æ ‡§≠‡•Ä ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        üîπ Event Listener ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡•Å‡§ñ‡•ç‡§Ø Methods
      </Typography>

      <Typography component="ul" sx={{ pl: 3 }}>
        <li><code>addEventListener()</code> ‚Äì Event ‡§ï‡•ã attach ‡§ï‡§∞‡§§‡§æ ‡§π‡•à</li>
        <li><code>removeEventListener()</code> ‚Äì Event ‡§ï‡•ã detach ‡§ï‡§∞‡§§‡§æ ‡§π‡•à</li>
      </Typography>

      <Typography variant="h6" gutterBottom>
        üî∏ <code>addEventListener()</code> Syntax
      </Typography>

      <Typography paragraph>
        <code>addEventListener()</code> method ‡§ï‡§æ ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä HTML element ‡§Æ‡•á‡§Ç ‡§è‡§ï event assign ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`selected_element.addEventListener(event_name, callback_function, useCapture);`}
      </Typography>

      <Typography component="ul" sx={{ pl: 3 ,mt:2}}>
        <li><strong>event_name</strong>: (required) Event ‡§ï‡§æ ‡§®‡§æ‡§Æ (‡§ú‡•à‡§∏‡•á <code>"click"</code>, <code>"mouseover"</code>), ‡§¨‡§ø‡§®‡§æ <code>on</code> prefix ‡§ï‡•á</li>
        <li><strong>callback_function</strong>: (required) ‡§µ‡§π function ‡§ú‡•ã event ‡§ï‡•á trigger ‡§π‡•ã‡§®‡•á ‡§™‡§∞ call ‡§π‡•ã‡§ó‡§æ</li>
        <li><strong>useCapture</strong>: (optional) Boolean value indicating event bubbling ‡§Ø‡§æ capturing (advanced use)</li>
      </Typography>

      <Typography variant="h6" gutterBottom mt={2}>
        ‚úÖ Example: <code>addEventListener</code>
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<!DOCTYPE html>
<html>
  <body>
    <button class="change_bg">You Clicked 0 Times</button>  
    <script type="text/javascript">
      let button_elem = document.getElementsByClassName('change_bg')[0];
      let number = 0;
      button_elem.addEventListener('click', function () {
        button_elem.innerText = \`You Clicked \${++number} Times\`;
      });
    </script>
  </body>
</html>`}
      </Typography>

      <Typography paragraph mt={2}>
        ‡§á‡§∏ ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§Æ‡•á‡§Ç <code>addEventListener()</code> ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§è‡§ï <code>click</code> event attach ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§π‡§∞ ‡§¨‡§æ‡§∞ ‡§¨‡§ü‡§® click ‡§π‡•ã‡§®‡•á ‡§™‡§∞ count ‡§¨‡§¢‡§º‡§æ‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom>
        üî∏ <code>removeEventListener()</code>
      </Typography>

      <Typography paragraph>
        <code>removeEventListener()</code> method ‡§ï‡§ø‡§∏‡•Ä event ‡§ï‡•ã remove ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡•§ ‡§Ø‡§π ‡§§‡§≠‡•Ä ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à ‡§ú‡§¨ event ‡§ï‡•ã add ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø reference function ‡§ï‡§æ use ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•ã (anonymous function ‡§®‡§π‡•Ä‡§Ç)‡•§
      </Typography>

      <Typography variant="h6" gutterBottom>
        ‚úÖ Example: <code>removeEventListener</code>
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<!DOCTYPE html>
<html>
  <body>
    <button id="add_listener">You Clicked 0 Times</button> 
    <script type="text/javascript">
      let add_listener_btn = document.getElementById('add_listener');
      let number = 0;

      function handleClick() {
        number++;
        if (number <= 5) {
          add_listener_btn.innerText = \`You Clicked \${number} Times\`;
        } else {
          add_listener_btn.removeEventListener('click', handleClick);
        }
      }

      add_listener_btn.addEventListener('click', handleClick);
    </script>
  </body>
</html>`}
      </Typography>

      <Typography paragraph mt={2}>
        ‡§á‡§∏ ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§Æ‡•á‡§Ç ‡§ú‡•à‡§∏‡•á ‡§π‡•Ä user 5 ‡§∏‡•á ‡§ú‡§º‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§¨‡§æ‡§∞ click ‡§ï‡§∞‡§§‡§æ ‡§π‡•à, <code>click</code> event listener ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§ß‡•ç‡§Ø‡§æ‡§® ‡§¶‡•á‡§Ç ‡§ï‡§ø <code>removeEventListener()</code> ‡§§‡§≠‡•Ä ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡•á‡§ó‡§æ ‡§ú‡§¨ ‡§Ü‡§™‡§®‡•á event listener ‡§ï‡•ã named function ‡§ï‡•á ‡§∏‡§æ‡§• add ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•ã‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="error">
        ‚ùï Important Notes
      </Typography>
      <Typography component="ul" sx={{ pl: 3 }}>
        <li><strong>Anonymous functions</strong> ‡§ï‡•ã <code>removeEventListener()</code> ‡§∏‡•á remove ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§µ‡•á memory ‡§Æ‡•á‡§Ç unique ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§§‡•á‡•§</li>
        <li>Ensure ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø event assign ‡§î‡§∞ remove ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ code element ‡§ï‡•á render ‡§π‡•ã‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶ run ‡§π‡•ã, ‡§®‡§π‡•Ä‡§Ç ‡§§‡•ã error ‡§Ü‡§è‡§ó‡•Ä‡•§</li>
      </Typography>

      <Typography paragraph fontStyle="italic" mt={2}>
        ‡§Ö‡§¨ ‡§Ü‡§™ ‡§∏‡§Æ‡§ù ‡§ö‡•Å‡§ï‡•á ‡§π‡•ã‡§Ç‡§ó‡•á ‡§ï‡§ø <strong>JavaScript ‡§Æ‡•á‡§Ç events ‡§ï‡•ã add ‡§î‡§∞ remove ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è event listeners</strong> ‡§ï‡•à‡§∏‡•á ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§ó‡•á ‡§Ü‡§™ ‡§á‡§®‡•ç‡§π‡•á‡§Ç React ‡§Ø‡§æ ‡§Ö‡§®‡•ç‡§Ø frameworks ‡§Æ‡•á‡§Ç ‡§≠‡•Ä use ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§
      </Typography>
    </Box>
  );
};

export default Js_dom_event_listener;
