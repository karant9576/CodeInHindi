import { Box, Typography } from "@mui/material";

const Js_break_statement = () => {
  return (
    <Box className="doc" sx={{ p: 2, maxWidth: 1000, mx: "auto", mt: '-1px' }}>
      <Typography variant="h5" gutterBottom fontWeight="bold" color="primary">
        JavaScript break Statement
      </Typography>

      <Typography paragraph>
        JavaScript ‡§Æ‡•á‡§Ç <strong>break</strong> ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó current loop (for, while, do-while, switch) ‡§Ø‡§æ labeled block ‡§∏‡•á ‡§¨‡§æ‡§π‡§∞ ‡§®‡§ø‡§ï‡§≤‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        üîÅ Syntax
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`break [label];`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        <code>label</code> ‡§è‡§ï optional parameter ‡§π‡•à ‡§ú‡•ã parent loop/block ‡§ï‡•ã identify ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ú‡§ø‡§∏‡§∏‡•á break ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚úÖ Example: Basic break
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`let x;
for(x = 1; x <= 5; x++) {
  if (x === 3) {
    break;
  }
  document.write(\`\${x} <br>\`);
}`}
        </Typography>
      </Box>

      <Typography variant="h6" gutterBottom color="secondary" mt={2}>
        üìå Output:
      </Typography>
      <Box sx={{bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre'}}>
        <Typography component="pre" sx={{ m: 0 }}>
{`1
2`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        <strong>Note:</strong> ‡§ú‡•à‡§∏‡•á ‡§π‡•Ä <code>x === 3</code> ‡§π‡•ã‡§§‡§æ ‡§π‡•à, loop ‡§§‡•Å‡§∞‡§Ç‡§§ terminate ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚úÖ Example: break with label
      </Typography>
      <Box sx={{bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`outer_loop:
for (let x = 1; x <= 5; x++) {
  for (let y = 1; y <= x; y++) {
    if (x === 3) {
      break outer_loop;
    }
    document.write(\`Inner Loop Value : \${y} <br>\`);
  }
  document.write(\`Outer Loop Value : \${x} <br>\`);
}`}
        </Typography>
      </Box>

      <Typography variant="h6" gutterBottom color="secondary" mt={2}>
        üìå Output:
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre'}}>
        <Typography component="pre" sx={{ m: 0 }}>
{`Inner Loop Value : 1
Outer Loop Value : 1
Inner Loop Value : 1
Inner Loop Value : 2
Outer Loop Value : 2`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        ‡§á‡§∏ ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§Æ‡•á‡§Ç ‡§ú‡•à‡§∏‡•á ‡§π‡•Ä <code>x === 3</code> ‡§π‡•Å‡§Ü, <code>outer_loop</code> ‡§∏‡•á break ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§î‡§∞ ‡§™‡•Ç‡§∞‡•á nested loop ‡§∏‡•á ‡§¨‡§æ‡§π‡§∞ ‡§®‡§ø‡§ï‡§≤ ‡§ó‡§è‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚ö†Ô∏è Invalid Label Use Example
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`/* It will work */
outer_block: {
  inner_block: {
    document.write('inner block');
    break outer_block;
    document.write('inner block 2'); // skip
  }
  document.write('outer block'); // skip
}

/* ‚ùå Error: label not found */
label1: {
  document.write('label 1');
  break label2;
}

label2: {
  document.write('label 2');
}`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        <strong>Note:</strong> break statement ‡§π‡§Æ‡•á‡§∂‡§æ ‡§â‡§∏‡•Ä label ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è ‡§ú‡§ø‡§∏‡•á ‡§µ‡•ã refer ‡§ï‡§∞ ‡§∞‡§π‡§æ ‡§π‡•à‡•§ ‡§Ö‡§®‡•ç‡§Ø‡§•‡§æ <code>SyntaxError</code> ‡§Ü‡§è‡§ó‡§æ‡•§
      </Typography>
    </Box>
  );
};

export default Js_break_statement;