import { Box, Typography } from "@mui/material";

const Js_date = () => {
  return (
    <Box sx={{ p: 2, maxWidth: 1000, mx: "auto", mt: "-1px" }}>
      <Typography variant="h5" fontWeight="bold" gutterBottom color="primary">
        JavaScript Date Object
      </Typography>

      <Typography paragraph>
        тЭХ <strong>Today:</strong><br />
        {new Date().toString()}
      </Typography>

      <Typography paragraph>
        JavaScript рдореЗрдВ current date рдФрд░ time рдХреЛ рдкреНрд░рд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП <code>Date()</code> class рдХрд╛ object рдмрдирд╛рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ, рдЬреЛ рдХрд┐ рдПрдХ complete date-time string return рдХрд░рддрд╛ рд╣реИред
        JavaScript browser рдХрд╛ time zone automatically use рдХрд░рддрд╛ рд╣реИред
      </Typography>

      <Typography variant="h6" gutterBottom>
        ЁЯУМ Basic Example: <code>new Date()</code>
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<!DOCTYPE html>
<html>
  <body>
    <script>
      let today = new Date();
      document.write(today);
    </script>
  </body>
</html>`}
      </Typography>

      <Typography paragraph mt={2}>
        <code>new Date()</code> default рд░реВрдк рд╕реЗ current date & time рдХреЛ return рдХрд░рддрд╛ рд╣реИред
        <br />
        рдЖрдк рдЪрд╛рд╣реЗ рддреЛ <code>today.toString()</code> рдХрд╛ рднреА use рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ:
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<script>
  let today = new Date();
  document.write(today.toString());
</script>`}
      </Typography>

      <Typography variant="h6" gutterBottom>
        ЁЯЫая╕П Create Custom Date
      </Typography>
      <Typography paragraph>
        рдЖрдк <code>Date()</code> constructor рдореЗрдВ custom value pass рдХрд░рдХреЗ specific date рднреА рдмрдирд╛ рд╕рдХрддреЗ рд╣реИрдВ:
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`new Date(year, month, day, hours, minutes, seconds, milliseconds)
new Date(milliseconds)
new Date(date string)`}
      </Typography>

      <Typography variant="h6" gutterBottom>
        тЬЕ Example: Create Date & Use Methods
      </Typography>

      <Typography component="pre" sx={{ bgcolor: "#8CCDEB", p: 2, borderRadius: 1, overflowX: "auto" }}>
{`<!DOCTYPE html>
<html>
  <body>
    <script>
      var d = new Date(2029, 11, 24, 10, 33, 30);
      document.write(d.getFullYear() + "<br>");
      document.write(d.getMonth() + "<br>");
      document.write(d.getDate() + "<br>");
      document.write(d.getHours() + "<br>");
      document.write(d.getMinutes() + "<br>");
      document.write(d.getSeconds() + "<br>");
    </script>
  </body>
</html>`}
      </Typography>

      <Typography paragraph mt={2}>
        тЪая╕П рдзреНрдпрд╛рди рджреЗрдВ рдХрд┐ <code>getSeonds()</code> рдПрдХ typo рд╣реИ тАФ рд╕рд╣реА method рд╣реИ: <code>getSeconds()</code>
      </Typography>

      <Typography variant="h6" gutterBottom>
        ЁЯФ╣ Static Methods (Without creating object)
      </Typography>

      <Typography component="ul" sx={{ pl: 3 }}>
        <li><strong>Date.now()</strong>: current time рдХреЛ milliseconds рдореЗрдВ return рдХрд░рддрд╛ рд╣реИ</li>
        <li><strong>Date.parse()</strong>: date string рдХреЛ milliseconds рдореЗрдВ convert рдХрд░рддрд╛ рд╣реИ (from Jan 1, 1970 UTC)</li>
      </Typography>

      <Typography variant="h6" gutterBottom>
        ЁЯФ╕ Instance Methods (Need object)
      </Typography>

      <Typography variant="subtitle1" gutterBottom fontWeight="bold">
        Get Methods:
      </Typography>

      <Typography component="ul" sx={{ pl: 3 }}>
        <li><code>getFullYear()</code> тАУ 4-digit year</li>
        <li><code>getMonth()</code> тАУ month (0тАУ11)</li>
        <li><code>getDate()</code> тАУ day of the month (1тАУ31)</li>
        <li><code>getDay()</code> тАУ day of the week (0тАУ6)</li>
        <li><code>getHours()</code> тАУ hours (0тАУ23)</li>
        <li><code>getMinutes()</code> тАУ minutes (0тАУ59)</li>
        <li><code>getSeconds()</code> тАУ seconds (0тАУ59)</li>
      </Typography>

      <Typography variant="subtitle1" gutterBottom fontWeight="bold">
        Set Methods:
      </Typography>

      <Typography component="ul" sx={{ pl: 3 }}>
        <li><code>setFullYear()</code> тАУ set year</li>
        <li><code>setMonth()</code> тАУ set month</li>
        <li><code>setDate()</code> тАУ set day of the month</li>
        <li><code>setHours()</code> тАУ set hours</li>
        <li><code>setMinutes()</code> тАУ set minutes</li>
        <li><code>setSeconds()</code> тАУ set seconds</li>
      </Typography>

      <Typography paragraph fontStyle="italic" mt={2}>
        рдЕрдм рдЖрдк JavaScript рдореЗрдВ Date object рд╕реЗ current date & time рд▓реЗрдирд╛, custom date рдмрдирд╛рдирд╛ рдФрд░ рдЙрд╕реЗ manipulate рдХрд░рдирд╛ рдЕрдЪреНрдЫреЗ рд╕реЗ рд╕рдордЭ рдЪреБрдХреЗ рд╣реЛрдВрдЧреЗред
      </Typography>
    </Box>
  );
};

export default Js_date;
