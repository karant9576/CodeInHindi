import { Box, Typography } from "@mui/material";

const Js_try_catch = () => {
  return (
    <Box className="doc" sx={{ p: 2, maxWidth: 1000, mx: "auto", mt: '-1px' }}>
      <Typography variant="h5" gutterBottom fontWeight="bold" color="primary">
        JavaScript try...catch Statement
      </Typography>

      <Typography paragraph>
        JavaScript ‡§Æ‡•á‡§Ç <strong>try...catch</strong> ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó runtime errors (exceptions) ‡§ï‡•ã handle ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§§‡§æ‡§ï‡§ø program ‡§¨‡§ø‡§®‡§æ terminate ‡§π‡•Å‡§è smoothly execute ‡§π‡•ã ‡§∏‡§ï‡•á‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        üìå Syntax:
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`try {
  // Code that may throw error
} catch(error) {
  // Code to handle the error
}`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        ‡§ú‡§¨ try block ‡§Æ‡•á‡§Ç ‡§ï‡•ã‡§à runtime error ‡§Ü‡§§‡•Ä ‡§π‡•à, JavaScript ‡§è‡§ï <strong>Error Object</strong> ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§â‡§∏‡•á catch block ‡§Æ‡•á‡§Ç pass ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§ ‡§á‡§∏ object ‡§Æ‡•á‡§Ç ‡§Æ‡•Å‡§ñ‡•ç‡§Ø‡§§‡§É ‡§¶‡•ã properties ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç:
      </Typography>
      <ul>
        <li><strong>name</strong>: Error ‡§ï‡§æ ‡§®‡§æ‡§Æ (‡§ú‡•à‡§∏‡•á ReferenceError)</li>
        <li><strong>message</strong>: Error ‡§ï‡§æ message (‡§ú‡•à‡§∏‡•á variable is not defined)</li>
      </ul>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚úÖ Example:
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`<script type="text/javascript">
  try {
    document.write(blah); // undefined variable
  } catch (error) {
    document.write("Error Name: " + error.name + "<br>");
    document.write("Error Message: " + error.message);
  }
</script>`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        ‡§á‡§∏ example ‡§Æ‡•á‡§Ç undefined variable <code>blah</code> ‡§ï‡•ã access ‡§ï‡§∞‡§®‡•á ‡§∏‡•á ReferenceError ‡§Ü‡§Ø‡§æ ‡§ú‡§ø‡§∏‡•á catch block ‡§®‡•á handle ‡§ï‡§∞ ‡§≤‡§ø‡§Ø‡§æ‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚ùå Limitations:
      </Typography>
      <Typography paragraph>
        try...catch ‡§ï‡•á‡§µ‡§≤ <strong>runtime errors</strong> ‡§ï‡•ã handle ‡§ï‡§∞‡§§‡§æ ‡§π‡•à, <strong>syntax errors</strong> ‡§î‡§∞ <strong>logical errors</strong> ‡§ï‡•ã ‡§®‡§π‡•Ä‡§Ç‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚è±Ô∏è try...catch is Synchronous
      </Typography>
      <Typography paragraph>
        try...catch asynchronous functions (‡§ú‡•à‡§∏‡•á setTimeout) ‡§Æ‡•á‡§Ç ‡§∏‡•Ä‡§ß‡•á ‡§ï‡§æ‡§Æ ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§§‡§æ ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§ú‡§¨ ‡§§‡§ï error ‡§Ü‡§§‡•Ä ‡§π‡•à, JavaScript try block ‡§ï‡•ã ‡§õ‡•ã‡•ú ‡§ö‡•Å‡§ï‡•Ä ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡•§
      </Typography>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚ùå Wrong Usage:
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`try {
  setTimeout(function() {
    anyvariable; // error
  }, 1000);
} catch (err) {
  alert("This will not work");
}`}
        </Typography>
      </Box>

      <Typography variant="h6" gutterBottom color="secondary">
        ‚úÖ Correct Usage:
      </Typography>
      <Box sx={{ bgcolor: '#8CCDEB', p: 2, borderRadius: 1 ,overflowX:'auto',whiteSpace:'pre' }}>
        <Typography component="pre" sx={{ m: 0 }}>
{`setTimeout(function() {
  try {
    anyvariable; // error
  } catch (err) {
    document.write(err);
  }
}, 1000);`}
        </Typography>
      </Box>

      <Typography paragraph mt={2}>
        Asynchronous errors ‡§ï‡•ã handle ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è <strong>try...catch</strong> ‡§ï‡•ã asynchronous function ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ use ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§
      </Typography>
    </Box>
  );
};

export default Js_try_catch;
